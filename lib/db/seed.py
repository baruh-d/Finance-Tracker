from models import engine, sessionmaker, Base, User, Transactions, Categories, DateTime
import random
from faker import Faker

fake = Faker()
# initialize the seed value to ensure random data generated by Faker remains consistent across multiple runs
#by initializing to zero . This will generate a new set of "random" values each time you run the script. 
fake.seed(0)
def populate():
    """Populate the database with fake data."""
    #generating user data
    users = {User(name=fake.name(), email=fake.email()) for _ in range(10)}
    #generating  transaction and category data using associated classes/methods within the User class
    transactions = [user.add_transaction(amount=random.randint(-500, 500),
                                         datetime=DateTime(day=random.randint(1,28),  month=random.choice([1,3,
                                         datetime=DateTime.generate_datetime(),
                                         category=Categories.select_category())
                   for user in users]
    categories = Users.group_categories(transactions)
    #committing the sessions
    transactions = {}

    for user in users:
        num_transactions = random.randint(5, 20)
        for _ in range(num_transactions ):
            amount = fake.random(min=1, max=999999) #amount range to rep ksh
            transaction = Transactions(user=user, category=categories[random.randint(0, len(categories)-1)],
                                       description=fake.sentence(), amount=amount)
            if random.choice([True, False]): # 50/50 chance of being a credit or debit card
                transaction.debit(user.balance)
            else:
                transaction.credit(user.balance)
            transactions.append(transaction)
            
    session.bulk_save_objects(transactions)
    